function u = collage(r,s,interieur)

% Dimensions de r :
[nb_lignes_r,nb_colonnes_r,nb_canaux] = size(r);
nb_pixels_r = nb_lignes_r * nb_colonnes_r;

% Operateur gradient :
e = ones(nb_pixels_r,1);
Dx = spdiags([-e e],[0 nb_lignes_r],nb_pixels_r,nb_pixels_r);
Dx(nb_pixels_r-nb_lignes_r+1:nb_pixels_r,:) = 0;
Dy = spdiags([-e e],[0 1],nb_pixels_r,nb_pixels_r);
Dy(nb_lignes_r:nb_lignes_r:nb_pixels_r,:) = 0;

%%
r = double(r);
s = double(s);

% Calcul de l'imagette resultat im, canal par canal :
u = r;
for k = 1:nb_canaux
	u_k = u(:,:,k);
	s_k = s(:,:,k);
    r_k = r(:,:,k);
    
    Creux = ones(nb_lignes_r, nb_colonnes_r);
    Creux(2:end-1, 2:end-1) = 0;
    bord_r = (find(Creux == 1));
    nb_bord_r = length(bord_r);
    
    % laplacien
    A = -Dx*Dx - Dy'*Dy;
    A(bord_r,:) = sparse(1:nb_bord_r, bord_r, ones(nb_bord_r,1), nb_bord_r, nb_pixels_r);
    
    %%
    rk = r_k(:);
    uk = u_k(:);
    sk = s_k(:);
    gk_x = Dx*rk;
    gk_y = Dy*rk;
    gs_x = Dx*sk;
    gs_y = Dy*sk;
    gk_x(interieur) = gs_x(interieur);
    gk_y(interieur) = gs_y(interieur);
    
    b = - Dx'*gk_x - Dy'*gk_y;

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    
    u_k = A \ b;
	u_k = reshape(u_k ,nb_lignes_r ,nb_colonnes_r);
    
	%u_k(interieur) = s_k(interieur);
	u(:,:,k) = u_k;

end
